The ``1-my_list`` module
======================

Using ``MyList``
-------------------

Importing the function from the module:
        >>> MyList = __import__("1-my_list").MyList

Checking for module docstring:
        >>> m = __import__("1-my_list").__doc__
        >>> len(m) > 1
        True

Checking for class docstring:
        >>> c = __import__("1-my_list").MyList.__doc__
        >>> len(c) > 1
        True

Checking that MyList inherits from list:
        >>> issubclass(MyList, list)
        True

Checking for method docstring:
        >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
        >>> len(mod) > 1
        True

Checking that appendng works:
        >>> l.append(2)
        >>> l.append(4)
        >>> l.append(6)
        >>> l.append(8)
        >>> print(l)
        [2, 4, 6, 8]

Checking for list already in correct order:
        >>> l.print_sorted()
        [2, 4, 6, 8]

Checking for negative number:
        >>> l.append(-1)
        >>> print(l)
        [8, 6, 4, 2, -1]
        >>> l.print_sorted()
        [-1, 2, 4, 6, 8]
        >>> print(l)
        [8, 6, 4, 2, -1]

Checking for too many arguments:
        >>> l.print_sorted(1)
        Traceback (most recent call last):
        ...
        TypeError: print_sorted() takes 1 positional argument but 2 were given
